{"ast":null,"code":"var _jsxFileName = \"D:\\\\sih1750_fuzzer\\\\frontend\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './index.css';\nimport { startScan, getStatus } from './api';\nimport ScanForm from './components/ScanForm';\nimport ScanStatus from './components/ScanStatus';\nimport FindingsTable from './components/FindingsTable';\nimport ReportDownload from './components/ReportDownload';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [status, setStatus] = useState({\n    state: 'idle',\n    progress: 0,\n    results: [],\n    report_files: {}\n  });\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      try {\n        const data = await getStatus();\n        setStatus(data);\n      } catch (error) {\n        console.error('Error fetching status:', error);\n      }\n    }, 2000);\n    return () => clearInterval(interval);\n  }, []);\n  const handleStartScan = async (url, threads, rate) => {\n    try {\n      await startScan(url, threads, rate);\n    } catch (error) {\n      console.error('Error starting scan:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-100 p-8\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-4xl mx-auto bg-white p-6 rounded-lg shadow-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-3xl font-bold mb-6 text-center\",\n        children: \"FuzzGuard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ScanForm, {\n        onStart: handleStartScan\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ScanStatus, {\n        state: status.state,\n        progress: status.progress\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), status.results.length > 0 && /*#__PURE__*/_jsxDEV(FindingsTable, {\n        findings: status.results\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 39\n      }, this), status.state === 'completed' && /*#__PURE__*/_jsxDEV(ReportDownload, {\n        files: status.report_files\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 42\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"kVWL7ylEiJVfnTQrCzJxOJPE6Wg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","startScan","getStatus","ScanForm","ScanStatus","FindingsTable","ReportDownload","jsxDEV","_jsxDEV","App","_s","status","setStatus","state","progress","results","report_files","interval","setInterval","data","error","console","clearInterval","handleStartScan","url","threads","rate","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onStart","length","findings","files","_c","$RefreshReg$"],"sources":["D:/sih1750_fuzzer/frontend/src/App.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './index.css';\r\nimport { startScan, getStatus } from './api';\r\nimport ScanForm from './components/ScanForm';\r\nimport ScanStatus from './components/ScanStatus';\r\nimport FindingsTable from './components/FindingsTable';\r\nimport ReportDownload from './components/ReportDownload';\r\n\r\nfunction App() {\r\n  const [status, setStatus] = useState({ state: 'idle', progress: 0, results: [], report_files: {} });\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(async () => {\r\n      try {\r\n        const data = await getStatus();\r\n        setStatus(data);\r\n      } catch (error) {\r\n        console.error('Error fetching status:', error);\r\n      }\r\n    }, 2000);\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  const handleStartScan = async (url, threads, rate) => {\r\n    try {\r\n      await startScan(url, threads, rate);\r\n    } catch (error) {\r\n      console.error('Error starting scan:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-100 p-8\">\r\n      <div className=\"max-w-4xl mx-auto bg-white p-6 rounded-lg shadow-lg\">\r\n        <h1 className=\"text-3xl font-bold mb-6 text-center\">FuzzGuard</h1>\r\n        <ScanForm onStart={handleStartScan} />\r\n        <ScanStatus state={status.state} progress={status.progress} />\r\n        {status.results.length > 0 && <FindingsTable findings={status.results} />}\r\n        {status.state === 'completed' && <ReportDownload files={status.report_files} />}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}